services:
  frontend-user:
    build:
      context: ./frontend-user
      dockerfile: Dockerfile
    environment:
      TZ: Asia/Tokyo
    volumes:
      - ./frontend-user:/app
      - frontend-user_node_modules:/app/node_modules
    command: yarn dev -p 4000
    ports:
      - "4000:4000"
    networks:
      fixed_compose_network:
        ipv4_address: 172.18.0.3
  frontend-company:
    build:
      context: ./frontend-company
      dockerfile: Dockerfile
    environment:
      TZ: Asia/Tokyo
    volumes:
      - ./frontend-company:/app
      - frontend-company_node_modules:/app/node_modules
    command: yarn dev -p 4001
    ports:
      - "4001:4001"
    networks:
      fixed_compose_network:
        ipv4_address: 172.18.0.4
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      RAILS_ENV: development
      TZ: Asia/Tokyo
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails db:migrate db:seed && bundle exec rails s -b '0.0.0.0'"
    volumes:
      - ./backend:/app
    depends_on:
      - db
    ports:
      - "3000:3000"
    networks:
      fixed_compose_network:
        ipv4_address: 172.18.0.5
    tty: true
    stdin_open: true
  db:
    image: postgres:16.2
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app_development
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
volumes:
  frontend-user_node_modules:
  frontend-company_node_modules:
  postgres_data:
networks:
  fixed_compose_network:
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/24